FUNCTION CHECK_ANSWER(P_VOCABULARY_ID IN NUMBER, P_ANSWER IN VARCHAR2)
    RETURN BOOLEAN
    IS V_NUMBER_OF_ROWS_WITH_ANSWER NUMBER;
    BEGIN
        SELECT COUNT(*) INTO V_NUMBER_OF_ROWS_WITH_ANSWER FROM T_TRANSLATION WHERE TRANSLATION = P_ANSWER AND VOCABULARY_ID = P_VOCABULARY_ID;
        RETURN V_NUMBER_OF_ROWS_WITH_ANSWER > 0;
END CHECK_ANSWER;

PROCEDURE ANSWER_VOC (P_VOCABULARY_ID IN NUMBER, P_ANSWER IN VARCHAR2, P_USER_ID IN NUMBER)
    IS
    V_CORRECT NUMBER;
    V_VOCABULARY_ID NUMBER;
    V_MESSAGE VARCHAR2(256);
    CRLF        VARCHAR2(2)  := CHR(13)||CHR(10);
    BEGIN
            IF CHECK_ANSWER(P_VOCABULARY_ID, P_ANSWER) THEN
            V_CORRECT := -1;
            V_MESSAGE := GETTER.GET_RESSOURCE(4) || '''' || GETTER.GET_VOCABULARY_BY_ID(P_VOCABULARY_ID) || '''' || GETTER.GET_RESSOURCE(5) || CRLF ||
                         GETTER.GET_RESSOURCE(7) || P_ANSWER || CRLF;
            DBMS_OUTPUT.PUT_LINE(V_MESSAGE);

            ELSE
            V_CORRECT := 0;
            V_MESSAGE := GETTER.GET_RESSOURCE(4) || '''' || GETTER.GET_VOCABULARY_BY_ID(P_VOCABULARY_ID) || '''' || GETTER.GET_RESSOURCE(6) || '''' || GETTER.GET_TRANSLATION_BY_VOCABULARY_ID(P_VOCABULARY_ID) || '''' || CRLF ||
                         GETTER.GET_RESSOURCE(7) || P_ANSWER || CRLF;
            DBMS_OUTPUT.PUT_LINE(V_MESSAGE);
            END IF;
        UPDATE T_VOCABULARY_IN_STATISTIC SET CORRECT = V_CORRECT WHERE VOCABULARY_ID = P_VOCABULARY_ID;
        INSERT_COUNTER_AND_CATEGORY(P_USER_ID, P_VOCABULARY_ID, V_CORRECT);
    COMMIT;
    SET_TIMESTAMP_DONE();
    END ANSWER_VOC;

PROCEDURE INSERT_COUNTER_AND_CATEGORY(P_USER_ID IN NUMBER, P_VOCABULARY_ID IN NUMBER, P_CORRECT IN NUMBER)
    IS
    BEGIN
        MERGE INTO T_VOCABULARY_IN_USER DEST USING (SELECT P_USER_ID AS USER_ID, P_VOCABULARY_ID AS VOCABULARY_ID FROM DUAL) SRC ON (SRC.USER_ID=DEST.USER_ID AND SRC.VOCABULARY_ID=DEST.VOCABULARY_ID)
        WHEN MATCHED THEN
            UPDATE SET
            TIMESTAMP_LAST_PRACTICE = CURRENT_TIMESTAMP,
            CATEGORY = CASE
                        WHEN(P_CORRECT=-1 AND CATEGORY < 5 AND COUNTER = 5)
                        THEN (CATEGORY + 1)
                        ELSE CATEGORY
                        END,
            COUNTER = CASE
                        WHEN ((P_CORRECT = 0 AND COUNTER = 0 ) OR (P_CORRECT = -1 AND COUNTER = 5))
                        THEN 0
                        ELSE(COUNTER+1)
                        END
            WHERE USER_ID = P_USER_ID AND VOCABULARY_ID = P_VOCABULARY_ID
        WHEN NOT MATCHED THEN
        INSERT (USER_ID, VOCABULARY_ID, CATEGORY, COUNTER)
        VALUES (P_USER_ID, P_VOCABULARY_ID, 0, CASE
                                                WHEN (P_CORRECT = -1) THEN 1
                                                ELSE 0
                                                END);
        COMMIT;
    END INSERT_COUNTER_AND_CATEGORY;
