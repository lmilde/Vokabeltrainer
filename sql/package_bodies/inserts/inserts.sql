PROCEDURE INSERT_NEW_LANGUAGE(P_LANGUAGE IN VARCHAR)
	IS
	BEGIN
		MERGE INTO T_LANGUAGE DEST USING (SELECT P_LANGUAGE AS NAME FROM DUAL) SRC ON (SRC.NAME = DEST.NAME)
		WHEN NOT MATCHED THEN
			INSERT  (NAME) VALUES (P_LANGUAGE);
		COMMIT;
	END INSERT_NEW_LANGUAGE;

PROCEDURE INSERT_NEW_UNIT (P_UNIT IN VARCHAR2)
    IS
    BEGIN
        MERGE INTO T_UNIT DEST USING (SELECT P_UNIT AS NAME FROM DUAL) SRC ON (SRC.NAME = DEST.NAME)
        WHEN NOT MATCHED THEN
            INSERT (NAME) VALUES (P_UNIT);
        COMMIT;
    END INSERT_NEW_UNIT;

	PROCEDURE INSERT_NEW_USER (P_FIRSTNAME IN VARCHAR2, P_LASTNAME IN VARCHAR2, P_EMAIL IN VARCHAR2)
    IS
    BEGIN
        MERGE INTO T_USER DEST USING (SELECT P_FIRSTNAME AS FIRSTNAME, P_LASTNAME AS LASTNAME, P_EMAIL AS EMAIL FROM DUAL) SRC ON (SRC.EMAIL = DEST.EMAIL)
        WHEN NOT MATCHED THEN
            INSERT (FIRSTNAME, LASTNAME, EMAIL) VALUES (P_FIRSTNAME, P_LASTNAME, P_EMAIL);
        COMMIT;
    END INSERT_NEW_USER;

PROCEDURE INSERT_NEW_TRANSLATION (P_TRANSLATION IN VARCHAR2, P_VOCABULARY IN VARCHAR2, P_UNIT IN VARCHAR2, P_LANGUAGE IN VARCHAR)
    IS
    BEGIN
        MERGE INTO T_TRANSLATION DEST USING (SELECT P_TRANSLATION AS TRANSLATION,(SELECT V.ID FROM T_VOCABULARY V INNER JOIN T_UNIT U ON U.ID = U.ID WHERE V.VOCABULARY = P_VOCABULARY AND U.NAME = P_UNIT) AS VOCABULARY_ID, P_VOCABULARY AS VOCABULARY,P_LANGUAGE AS LANGUAGE FROM DUAL)
        SRC ON (SRC.VOCABULARY_ID = DEST.VOCABULARY_ID AND SRC.TRANSLATION = DEST.TRANSLATION)
        WHEN NOT MATCHED THEN
            INSERT (TRANSLATION, VOCABULARY, LANGUAGE_ID, VOCABULARY_ID) VALUES (P_TRANSLATION, P_VOCABULARY, (SELECT ID FROM T_LANGUAGE WHERE NAME = P_LANGUAGE), (SELECT ID FROM T_VOCABULARY WHERE VOCABULARY = P_VOCABULARY));
        COMMIT;
    END INSERT_NEW_TRANSLATION;

PROCEDURE INSERT_NEW_VOCABULARY (P_VOCABULARY IN VARCHAR2, P_UNIT IN VARCHAR2, P_LANGUAGE IN VARCHAR2)
    IS
    BEGIN
        MERGE INTO T_VOCABULARY DEST USING (SELECT P_VOCABULARY AS VOCABULARY, P_UNIT AS UNIT, P_LANGUAGE AS LANGUAGE FROM DUAL) SRC ON (SRC.VOCABULARY = DEST.VOCABULARY)
        WHEN NOT MATCHED THEN
            INSERT (VOCABULARY, UNIT_ID, LANGUAGE_ID) VALUES (P_VOCABULARY, (SELECT ID FROM T_UNIT WHERE NAME = P_UNIT), (SELECT ID FROM T_LANGUAGE WHERE NAME = P_LANGUAGE));
        COMMIT;
    END INSERT_NEW_VOCABULARY;

	PROCEDURE CREATE_NEW_STATISTIC (P_CATEGORY IN NUMBER, P_UNIT IN VARCHAR2, P_USER_ID IN NUMBER)
    IS V_STATISTIC_ID NUMBER;
    BEGIN
--create the statistic itself
        INSERT INTO T_STATISTIC (USER_ID) VALUES (P_USER_ID);
        COMMIT;

--load variables
        SELECT ID INTO V_STATISTIC_ID FROM T_STATISTIC WHERE ROWID=(SELECT MAX(ROWID) FROM T_STATISTIC);


        FOR	I IN (SELECT DISTINCT MIN(VOC_ID) AS ID FROM V_ALL_VOCABULARY_ENTRIES WHERE (CATEGORY = P_CATEGORY OR P_CATEGORY = -1) AND (UNIT_NAME = P_UNIT OR P_UNIT = ' ') GROUP BY TRANSLATION)
        LOOP
            INSERT INTO T_VOCABULARY_IN_STATISTIC (STATISTIC_ID, VOCABULARY_ID) VALUES (V_STATISTIC_ID, I.ID);
            COMMIT;
        END LOOP;

    END CREATE_NEW_STATISTIC;
